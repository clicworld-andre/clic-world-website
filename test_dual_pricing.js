/**\n * Simple test to verify dual pricing API endpoints\n */\n\nconst testDualPricingAPI = async () => {\n  console.log('🧪 Testing CLIX Dual Pricing API Endpoints...');\n  \n  const CLIX_ASSET_CODE = 'CLIX';\n  const CLIX_ISSUER = 'GBCJSKXTZX5CYKJGBGQPYEATLSGR4EPRUOL7EKIDCDOZ4UC67BBQRCSO';\n  const HORIZON_URL = 'https://horizon.stellar.org';\n  \n  try {\n    // Test CLIX/USDC order book\n    console.log('\\n1️⃣ Testing CLIX/USDC Order Book...');\n    const usdcUrl = `${HORIZON_URL}/order_book?selling_asset_type=credit_alphanum4&selling_asset_code=${CLIX_ASSET_CODE}&selling_asset_issuer=${CLIX_ISSUER}&buying_asset_type=credit_alphanum4&buying_asset_code=USDC&buying_asset_issuer=GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN`;\n    \n    const usdcResponse = await fetch(usdcUrl);\n    console.log(`  📡 USDC Response Status: ${usdcResponse.status}`);\n    \n    if (usdcResponse.ok) {\n      const usdcData = await usdcResponse.json();\n      console.log(`  📊 USDC Asks: ${usdcData.asks?.length || 0}`);\n      console.log(`  📊 USDC Bids: ${usdcData.bids?.length || 0}`);\n      \n      if (usdcData.asks?.length > 0) {\n        console.log(`  💰 USD Price (Ask): ${usdcData.asks[0].price}`);\n      }\n      if (usdcData.bids?.length > 0) {\n        console.log(`  💰 USD Price (Bid): ${usdcData.bids[0].price}`);\n      }\n    }\n    \n    // Test CLIX/XLM order book\n    console.log('\\n2️⃣ Testing CLIX/XLM Order Book...');\n    const xlmUrl = `${HORIZON_URL}/order_book?selling_asset_type=credit_alphanum4&selling_asset_code=${CLIX_ASSET_CODE}&selling_asset_issuer=${CLIX_ISSUER}&buying_asset_type=native`;\n    \n    const xlmResponse = await fetch(xlmUrl);\n    console.log(`  📡 XLM Response Status: ${xlmResponse.status}`);\n    \n    if (xlmResponse.ok) {\n      const xlmData = await xlmResponse.json();\n      console.log(`  📊 XLM Asks: ${xlmData.asks?.length || 0}`);\n      console.log(`  📊 XLM Bids: ${xlmData.bids?.length || 0}`);\n      \n      if (xlmData.asks?.length > 0) {\n        console.log(`  💫 XLM Price (Ask): ${xlmData.asks[0].price}`);\n      }\n      if (xlmData.bids?.length > 0) {\n        console.log(`  💫 XLM Price (Bid): ${xlmData.bids[0].price}`);\n      }\n    }\n    \n    // Test XLM/USD rate from CoinGecko\n    console.log('\\n3️⃣ Testing XLM/USD Rate...');\n    const xlmRateResponse = await fetch('https://api.coingecko.com/api/v3/simple/price?ids=stellar&vs_currencies=usd');\n    \n    if (xlmRateResponse.ok) {\n      const xlmRateData = await xlmRateResponse.json();\n      const xlmUsdRate = xlmRateData?.stellar?.usd;\n      console.log(`  💫 XLM/USD Rate: ${xlmUsdRate}`);\n    }\n    \n    console.log('\\n✅ API Test Complete!');\n    \n  } catch (error) {\n    console.error('❌ Test failed:', error.message);\n  }\n};\n\n// Auto-run the test\ntestDualPricingAPI();\n